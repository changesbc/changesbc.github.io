[{"title":"Hello World","url":"/2023/07/25/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"Code","url":"/2023/07/26/daima/","content":"for i in range(3):    for j in range(3):        print(&quot;*&quot;,end = &#x27; &#x27;)    print()    "},{"title":"海龟绘制图形","url":"/2023/07/26/Turtle%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2/","content":"03_使用海龟绘制图形Turtle库是Python语言中一个很流行的绘制图像的函数库，想象一个小乌龟，在一个横轴为x、纵轴为y的坐标系原点，(0,0)位置开始，它根据一组函数指令的控制，在这个平面坐标系中移动，从而在它爬行的路径上绘制了图形。\n一、导入库\nimport turtle\n\nimport turtleturtle.forward(100)\n\n\nimport turtle as t\n\nimport turtle as tt.forward(100)\n\n二、基础指令\n隐藏海龟\n\nimport turtleturtle.forward(100)turtle.hideturtle()  # 绘制完成之后，隐藏海龟\n\n\n暂停程序，停止画笔绘制\n\nimport turtleturtle.forward(100)turtle.hideturtle()turtle.done() # 完成\n\n作用是暂停程序，停止画笔绘制，但绘图窗体不关闭，直到用户关闭Python Turtle图形化窗口为止。\n\n显示海龟\n\nimport turtleturtle.forward(100) # 前进turtle.hideturtle()  # 隐藏箭头turtle.showturtle() # 显示箭头turtle.done()\n\n\n返回原点\n\nturtle.home()海龟移至初始坐标 (0,0)，并设置朝向为初始方向。\n\nimport turtleturtle.setheading(90)turtle.forward(100)turtle.home()turtle.done()\n\n\n海龟速度\n\nimport turtleturtle.speed(0) # 最快\n\n\"fastest\": 0 最快\"fast\": 10 快\"normal\": 6 正常\"slow\": 3 慢\"slowest\": 1 最慢\n\n\n如果输入数值大于 10 或小于 0.5 则速度设为0\n\n三、多边形内角和使用海龟绘图绘制一个三角形\n\n\n\n流程图绘制\n\n\n\nimport turtle# turtle.shape('turtle') # 设置海龟形状turtle.forward(100)turtle.left(120)turtle.forward(100)turtle.left(120)turtle.forward(100)turtle.left(120)turtle.done()\n\n\n\n\n假如多边形的边数为n，内角和为180*（n-2）\n\n【小试牛刀】\n绘制一个正五边形\n绘制一个五角星\n\n\n\n\n\nimport turtle as tt.pensize(5) # 设置画笔粗细t.fd(150) # 五角星边长t.left(144) # 旋转角度t.fd(150)t.left(144)t.fd(150)t.left(144)t.fd(150)t.left(144)t.fd(150)t.left(144)\n\n四、画圆turtle.circle(radius, extent=None, steps=None)* radius 指定半径的圆，如果 radius 为正值则朝逆时针方向绘制圆弧，否则朝顺时针方向* extent 为一个夹角，用来决定绘制圆的一部分，未指定 extent则绘制整个圆* 圆实际是以其内切正多边形来近似表示的，其边的数量由 steps 指定\n\n【小试牛刀】绘制一个半径为100的圆\nimport turtleturtle.circle(100)turtle.done()\n\n【思考？】假如circle(-100)会画出什么样的图形import turtleturtle.circle(-100)turtle.done()\n\n\n半径为正时，海龟逆时针绘制一个圆\n半径为负时，海龟顺时针绘制一个圆\n\n4.1、使用circle()绘制多边形或弧线\ncircle(半径r，弧度L，边数n)\n\n【小试牛刀5】绘制一个半径为100的圆弧或者半圆\nimport turtle#turtle.circle(100,180) # 半径为100的半圆turtle.circle(100,80)# 半径为100的圆弧turtle.done()\n\n使用circle()函数来绘制多边形绘制三角形\nimport turtleturtle.circle(100,360,3)turtle.done()\n\n绘制8边形\nimport turtleturtle.circle(100,360,8)turtle.done()\n\n五、画点import turtleturtle.dot(100) # 直径为100的点,颜色默认为黑色turtle.done()\n\nturtle.dot(size=None, *color)绘制一个直径为 size，颜色为 color 的圆点。如果 size 未指定，则直径取 pensize+4 和 2*pensize 中的较大值。\n\nimport turtleturtle.dot(100,'red')\n\n\n\n六、设置朝向turtle.setheading(to_angle)设置海龟的朝向为 to_angle。\n\n\n\n\n角度\n方向\n\n\n\n0\n右\n\n\n90\n上\n\n\n180\n左\n\n\n270\n下\n\n\n\n默认海龟朝向是朝右，即0度\n\n\n\n\n注意，角度为正，代表逆时针旋转\n\n\n\n\n角度\n方向\n\n\n\n0\n右\n\n\n-90\n下\n\n\n-180\n左\n\n\n-270\n上\n\n\n\n设置海龟方向为右下，角度为-45度\n\n\n\n\n角度为负数，代表是顺时针旋转\n\n七、填充第一步、设置要填充的颜色import turtleturtle.fillcolor('red') # 设置填充颜色为红色\n\n第二步、准备开始填充图形import turtleturtle.fillcolor('red') # 设置填充颜色为红色turtle.begin_fill() # 准备开始填充图形\n\n第三步、绘制图形import turtleturtle.fillcolor('red') # 设置填充颜色为红色turtle.begin_fill() # 准备开始填充图形turtle.circle(100) # 绘制一个半径为100的圆\n\n第四步、填充完成import turtleturtle.fillcolor('red') # 设置填充颜色为红色turtle.begin_fill() # 准备开始填充图形turtle.circle(100) # 绘制一个半径为100的圆turtle.end_fill() # 填充完成turtle.done()\n\n设置图形边框颜色（默认为黑色）,即设置画笔颜色import turtleturtle.fillcolor('red') # 设置填充颜色为红色turtle.pencolor('blue') # 设置边框颜色turtle.begin_fill() # 准备开始填充图形turtle.circle(100) # 绘制一个半径为100的圆turtle.end_fill() # 填充完成turtle.done()\n\n【小试牛刀】\n\nimport turtle as tt.pensize(5) # 设置画笔粗细t.circle(160) # 绘制外面大圆，半径为160# 右边t.fillcolor('red') # 填充颜色t.begin_fill() # 开始填充t.circle(80,180) # 绘制下面半圆弧，逆时针t.circle(-80,180)# 绘制上面半圆弧，顺时针t.circle(-160,180)t.end_fill()  # 结束填充# 左边t.fillcolor('purple') # 填充颜色t.begin_fill() # 开始填充t.circle(-160,180) # 绘制左边大圆# 调整海龟方向t.setheading(180)t.circle(80,180) # 绘制上面半圆弧，逆时针t.circle(-80,180) # 绘制下面半圆弧，顺时针t.end_fill()  # 结束填充t.done() #完成\n\n八、习题任务1、思考，如何绘制如下图形\n\n【提示】\n需要抬笔和落笔，确定点的坐标位置\n绘制点可以使用dot()函数\n\n2、绘制如下图形,对角线长度为200【提示】\n可以使用goto()指令\n海龟开始的朝向与水平方向为45度\n\n\n\n"}]